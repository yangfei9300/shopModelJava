<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.XdOrders.mapper.XdOrdersMapper">
    
    <resultMap type="XdOrders" id="XdOrdersResult">
        <result property="id"    column="id"    />
        <result property="uId"    column="u_id"    />
        <result property="orderNumber"    column="order_number"    />
        <result property="orderDate"    column="order_date"    />
        <result property="payTime"    column="pay_time"    />
        <result property="sendTime"    column="send_time"    />
        <result property="putTime"    column="put_time"    />
        <result property="commTime"    column="comm_time"    />
        <result property="status"    column="status"    />
        <result property="addressId"    column="address_id"    />
        <result property="addressName"    column="address_name"    />

        <result property="addressPhone"    column="address_phone"    />
        <result property="address"    column="address"    />
        <result property="addressInfo"    column="address_info"    />
        <result property="shippingMethod"    column="shipping_method"    />
        <result property="logisticsName"    column="logistics_name"    />
        <result property="logisticsCode"    column="logistics_code"    />
        <result property="paymentMethod"    column="payment_method"    />
        <result property="totalAmount"    column="total_amount"    />
        <result property="totalInteger"    column="total_integer"    />
        <result property="couponMoney"    column="coupon_money"    />
        <result property="endMoney"    column="end_money"    />
        <result property="couponId"    column="coupon_id"    />

        <result property="superiorId"    column="superior_id"    />
        <result property="notes"    column="notes"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createTime"    column="create_time"    />
        <result property="deptId"    column="dept_id"    />
        <result property="userId"    column="user_id"    />
    </resultMap>

    <sql id="selectXdOrdersVo">
        select id, u_id, order_number, order_date, pay_time, send_time, put_time, comm_time, status, address_id,
               address,address_name,  address_phone,address_info,superior_id, shipping_method,
               logistics_name, logistics_code,
               payment_method,
               total_amount,total_integer, coupon_money, end_money, coupon_id,
               notes, update_time, create_time, dept_id,
               user_id from xd_orders as xo
    </sql>

    <select id="selectXdOrdersList" parameterType="XdOrders" resultMap="XdOrdersResult">
        <include refid="selectXdOrdersVo"/>
        <where>
            <if test="uId != null "> and u_id = #{uId}</if>
            <if test="orderNumber != null  and orderNumber != ''"> and order_number like concat('%', #{orderNumber}, '%')</if>
            <if test="orderDate != null "> and order_date = #{orderDate}</if>
            <if test="payTime != null "> and pay_time = #{payTime}</if>
            <if test="sendTime != null "> and send_time = #{sendTime}</if>
            <if test="putTime != null "> and put_time = #{putTime}</if>
            <if test="commTime != null "> and comm_time = #{commTime}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="addressId != null "> and address_id = #{addressId}</if>
            <if test="address != null  and address != ''"> and address like concat('%', #{address}, '%')</if>
            <if test="addressName != null  and addressName != ''"> and address_name like concat('%', #{addressName}, '%')</if>
            <if test="addressPhone != null  and addressPhone != ''"> and address_phone like concat('%', #{addressPhone}, '%')</if>
            <if test="addressInfo != null  and addressInfo != ''"> and address_info like concat('%', #{addressInfo}, '%')</if>
            <if test="shippingMethod != null  and shippingMethod != ''"> and shipping_method = #{shippingMethod}</if>
            <if test="logisticsName != null  and logisticsName != ''"> and logistics_name like concat('%', #{logisticsName}, '%')</if>
            <if test="logisticsCode != null  and logisticsCode != ''"> and logistics_code like concat('%', #{logisticsCode}, '%')</if>
            <if test="paymentMethod != null "> and payment_method = #{paymentMethod}</if>
            <if test="superiorId != null "> and superior_id = #{superiorId}</if>
            <if test="totalAmount != null "> and total_amount = #{totalAmount}</if>
            <if test="totalInteger != null "> and total_integer = #{totalInteger}</if>
            <if test="couponMoney != null "> and coupon_money = #{couponMoney}</if>
            <if test="endMoney != null "> and end_money = #{endMoney}</if>
            <if test="couponId != null "> and coupon_id = #{couponId}</if>
            <if test="notes != null  and notes != ''"> and notes like concat('%', #{notes}, '%')</if>
            <if test="deptId != null "> and dept_id = #{deptId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>

            <if test="deptId != null "> and dept_id = #{deptId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="id != null "> and id = #{id}</if>

            <if test="1==1 ">and 1=1</if>
        </where>
        ${params.dataScope}
    </select>
    
    <select id="selectXdOrdersById" parameterType="Long" resultMap="XdOrdersResult">
        <include refid="selectXdOrdersVo"/>
        where id = #{id}
    </select>

    <insert id="insertXdOrders" parameterType="XdOrders" useGeneratedKeys="true" keyProperty="id">
        insert into xd_orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uId != null">u_id,</if>
            <if test="orderNumber != null">order_number,</if>
            <if test="orderDate != null">order_date,</if>
            <if test="payTime != null">pay_time,</if>
            <if test="sendTime != null">send_time,</if>
            <if test="putTime != null">put_time,</if>
            <if test="commTime != null">comm_time,</if>
            <if test="status != null">status,</if>
            <if test="addressId != null">address_id,</if>
            <if test="address != null">address,</if>
            <if test="addressName != null">address_name,</if>
            <if test="addressPhone != null">address_phone,</if>
            <if test="addressInfo != null">address_info,</if>
            <if test="shippingMethod != null">shipping_method,</if>

            <if test="logisticsName != null">logistics_name,</if>
            <if test="logisticsCode != null">logistics_code,</if>

            <if test="paymentMethod != null">payment_method,</if>
            <if test="totalAmount != null">total_amount,</if>
            <if test="totalInteger != null">total_integer,</if>
            <if test="couponMoney != null">coupon_money,</if>
            <if test="endMoney != null">end_money,</if>
            <if test="couponId != null">coupon_id,</if>

            <if test="superiorId != null">superior_id,</if>
            <if test="notes != null">notes,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="userId != null">user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uId != null">#{uId},</if>
            <if test="orderNumber != null">#{orderNumber},</if>
            <if test="orderDate != null">#{orderDate},</if>
            <if test="payTime != null">#{payTime},</if>
            <if test="sendTime != null">#{sendTime},</if>
            <if test="putTime != null">#{putTime},</if>
            <if test="commTime != null">#{commTime},</if>
            <if test="status != null">#{status},</if>
            <if test="addressId != null">#{addressId},</if>
            <if test="address != null">#{address},</if>

            <if test="addressName != null">#{addressName},</if>
            <if test="addressPhone != null">#{addressPhone},</if>
            <if test="addressInfo != null">#{addressInfo},</if>
            <if test="shippingMethod != null">#{shippingMethod},</if>


            <if test="logisticsName != null">#{logisticsName},</if>
            <if test="logisticsCode != null">#{logisticsCode},</if>

            <if test="paymentMethod != null">#{paymentMethod},</if>
            <if test="totalAmount != null">#{totalAmount},</if>
            <if test="totalInteger != null">#{totalInteger},</if>
            <if test="couponMoney != null">#{couponMoney},</if>
            <if test="endMoney != null">#{endMoney},</if>
            <if test="couponId != null">#{couponId},</if>

            <if test="superiorId != null">#{superiorId},</if>
            <if test="notes != null">#{notes},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="userId != null">#{userId},</if>
         </trim>
    </insert>

    <update id="updateXdOrders" parameterType="XdOrders">
        update xd_orders
        <trim prefix="SET" suffixOverrides=",">
            <if test="uId != null">u_id = #{uId},</if>
            <if test="orderNumber != null">order_number = #{orderNumber},</if>
            <if test="orderDate != null">order_date = #{orderDate},</if>
            <if test="payTime != null">pay_time = #{payTime},</if>
            <if test="sendTime != null">send_time = #{sendTime},</if>
            <if test="putTime != null">put_time = #{putTime},</if>
            <if test="commTime != null">comm_time = #{commTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="addressId != null">address_id = #{addressId},</if>

            <if test="addressName != null">address_name = #{addressName},</if>
            <if test="addressPhone != null">address_phone = #{addressPhone},</if>
            <if test="address != null">address = #{address},</if>
            <if test="addressInfo != null">address_info = #{addressInfo},</if>
            <if test="shippingMethod != null">shipping_method = #{shippingMethod},</if>

            <if test="logisticsName != null">logistics_name = #{logisticsName},</if>
            <if test="logisticsCode != null">logistics_code = #{logisticsCode},</if>

            <if test="paymentMethod != null">payment_method = #{paymentMethod},</if>
            <if test="totalAmount != null">total_amount = #{totalAmount},</if>
            <if test="totalInteger != null">total_integer = #{totalInteger},</if>
            <if test="couponMoney != null">coupon_money = #{couponMoney},</if>
            <if test="endMoney != null">end_money = #{endMoney},</if>
            <if test="couponId != null">coupon_id = #{couponId},</if>

            <if test="superiorId != null">superior_id = #{superiorId},</if>
            <if test="notes != null">notes = #{notes},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="userId != null">user_id = #{userId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteXdOrdersById" parameterType="Long">
        delete from xd_orders where id = #{id}
    </delete>

    <delete id="deleteXdOrdersByIds" parameterType="String">
        delete from xd_orders where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


<!--    <resultMap id="orderResultMap" type="XdOrders">-->
<!--        <id property="id" column="id" />-->
<!--        <result property="uId"    column="u_id"    />-->
<!--        <result property="orderNumber"    column="order_number"    />-->
<!--        <result property="orderDate"    column="order_date"    />-->
<!--        <result property="payTime"    column="pay_time"    />-->
<!--        <result property="sendTime"    column="send_time"    />-->
<!--        <result property="putTime"    column="put_time"    />-->
<!--        <result property="commTime"    column="comm_time"    />-->
<!--        <result property="status"    column="status"    />-->
<!--        <result property="addressId"    column="address_id"    />-->
<!--        <result property="addressName"    column="address_name"    />-->

<!--        <result property="addressPhone"    column="address_phone"    />-->
<!--        <result property="address"    column="address"    />-->
<!--        <result property="addressInfo"    column="address_info"    />-->
<!--        <result property="shippingMethod"    column="shipping_method"    />-->
<!--        <result property="logisticsName"    column="logistics_name"    />-->
<!--        <result property="logisticsCode"    column="logistics_code"    />-->
<!--        <result property="paymentMethod"    column="payment_method"    />-->
<!--        <result property="totalAmount"    column="total_amount"    />-->
<!--        <result property="couponMoney"    column="coupon_money"    />-->
<!--        <result property="endMoney"    column="end_money"    />-->
<!--        <result property="couponId"    column="coupon_id"    />-->
<!--        <result property="notes"    column="notes"    />-->
<!--        <result property="updateTime"    column="update_time"    />-->
<!--        <result property="createTime"    column="create_time"    />-->
<!--        <result property="deptId"    column="dept_id"    />-->
<!--        <result property="userId"    column="user_id"    />-->

<!--     -->
<!--        <collection property="XdOrdersInfo" ofType="XdOrdersInfo" foreignColumn="id" column="order_id"-->
<!--                     select="getOrderItemsByOrderId" fetchType="lazy" />-->
<!--    </resultMap>-->

<!--    <select id="getOrders" parameterType="XdOrders"  resultMap="orderResultMap">-->
<!--SELECT-->
<!--	o.id,-->
<!--	o.u_id,-->
<!--	o.user_id,-->
<!--	o.order_date,-->
<!--	o.order_number,-->
<!--	i.product_img,-->
<!--	i.specs_img,-->
<!--	i.final_price,-->
<!--	i.quantity,-->
<!--	o.end_money-->
<!--FROM-->
<!--	xd_orders o-->
<!--	JOIN xd_orders_info i ON o.id = i.order_id-->
<!--WHERE-->
<!--	o.id = 14-->

<!--    </select>-->

<!--    <select id="getOrderItemsByOrderId" resultType="XdOrdersInfo">-->
<!--        SELECT * FROM xd_orders_info WHERE order_id = #{orderId}-->
<!--    </select>-->




<resultMap id="publisherResultMap" type="XdOrders">
    <id property="id" column="id" />
    <result property="uId"    column="u_id"    />
    <result property="userId"    column="user_id"    />
    <result property="status"    column="status"    />
    <result property="totalInteger"    column="total_integer"    />
    <result property="orderDate"    column="order_date"    />
    <result property="orderNumber"    column="order_number"    />
    <result property="endMoney"    column="end_money"    />
    <collection property="orderItems" ofType="XdOrdersInfo">
        <id property="id" column="id_info" jdbcType="VARCHAR"></id>

        <result property="spaceId" column="space_id" ></result>
        <result property="productImg" column="product_img" ></result>
        <result property="specsImg" column="specs_img" ></result>
        <result property="finalPrice" column="final_price" ></result>
        <result property="quantity" column="quantity" ></result>

        <result property="productName" column="product_name" ></result>
        <result property="specsName" column="specs_name" ></result>
        <result property="specsPrice" column="specs_price" ></result>


    </collection>
</resultMap>

<select id="getOrders" resultMap="publisherResultMap">
    SELECT
	o.id,
	o.u_id,
	o.user_id,
    o.status as   `status`,
    o.total_integer,
	o.order_date,
	o.order_number,
	i.id id_info,
	i.product_img,
	i.specs_img,
	i.final_price,
    i.specs_price,
    i.space_id,
	i.quantity,
    i.product_name,
    i.specs_name,
	o.end_money
FROM
	xd_orders o
	JOIN xd_orders_info i ON o.id = i.order_id

    <where>
        <if test="uId != null "> and o.u_id = #{uId}</if>
        <if test="id != null "> and o.id = #{id}</if>
        <if test="status != null "> and o.status = #{status}</if>
    </where>
    ORDER BY o.create_time DESC
</select>





<!--首页的四个统计数字-->
<select id="getHomeSum1" parameterType="map" resultType="map">
SELECT
   xo.total_amount,
    xu.user_count,
		xoo.order_count,
		xp.good_count
FROM
    (

		SELECT IFNULL(sum(end_money), 0.0)   AS total_amount ,xow.dept_id FROM xd_orders xow
		where   xow.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id = #{deptId} OR find_in_set(  #{deptId}, ancestors ) )


		) AS xo,
    (SELECT count(id) AS user_count FROM xd_user xdw
		where   xdw.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id =  #{deptId} OR find_in_set(  #{deptId}, ancestors ) )
		) AS xu,
		(SELECT count(end_money) AS order_count FROM xd_orders xow1
		where   xow1.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id =  #{deptId} OR find_in_set(  #{deptId}, ancestors ) )
		) AS xoo,
		(SELECT count(id) AS good_count FROM xd_products xpw
			where   xpw.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id =  #{deptId} OR find_in_set(  #{deptId}, ancestors ) )
		) AS xp;
</select>

<!--  商品下单占比  -->
    <select id="getGoodSaleProportion" parameterType="map" resultType="map">
        SELECT
            id,
            name,
            s.total_sales,
            ( s.total_sales / ( SELECT SUM( total_sales ) FROM (
SELECT SUM( final_price ) AS total_sales FROM xd_orders_info xoi1
         where  xoi1.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id = #{deptId} OR find_in_set(  #{deptId}, ancestors ) )
                                             GROUP BY id ) AS sub_sales )
                ) * 100 AS sales_percentage
        FROM
            xd_products p
                JOIN (
                SELECT
                    product_id,
                    SUM(final_price) AS total_sales
                FROM
                    xd_orders_info xoi
                where ( xoi.dept_id IN ( SELECT dept_id FROM sys_dept
                                    WHERE dept_id =  #{deptId} OR find_in_set(  #{deptId}, ancestors ) ) )
                GROUP BY
                    product_id
            ) s ON p.id = s.product_id
        ORDER BY
            s.total_sales DESC;
    </select>

    <select id="getMonthSales" parameterType="map" resultType="map">
        SELECT
        d.date_in_month AS sale_date
        -- 	so.final_price
        ,IFNULL( SUM( so.final_price ), 0 ) AS total_sales ,
        COALESCE(dept_id, #{deptId})  as dept_id
        FROM
        (
        SELECT
        CURDATE( ) - INTERVAL a.a + ( 10 * b.a ) + ( 100 * c.a ) DAY AS date_in_month
        FROM
        (
        SELECT
        0 AS a UNION ALL
        SELECT
        1 UNION ALL
        SELECT
        2 UNION ALL
        SELECT
        3 UNION ALL
        SELECT
        4 UNION ALL
        SELECT
        5 UNION ALL
        SELECT
        6 UNION ALL
        SELECT
        7 UNION ALL
        SELECT
        8 UNION ALL
        SELECT
        9
        ) AS a
        CROSS JOIN (
        SELECT
        0 AS a UNION ALL
        SELECT
        1 UNION ALL
        SELECT
        2 UNION ALL
        SELECT
        3 UNION ALL
        SELECT
        4 UNION ALL
        SELECT
        5 UNION ALL
        SELECT
        6 UNION ALL
        SELECT
        7 UNION ALL
        SELECT
        8 UNION ALL
        SELECT
        9
        ) AS b
        CROSS JOIN ( SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 ) AS c
        WHERE
        CURDATE( ) - INTERVAL a.a + ( 10 * b.a ) + ( 100 * c.a ) DAY
            &gt;= DATE_FORMAT( NOW( ) - INTERVAL ( DAY ( NOW( ) ) - 1 ) DAY, '%Y-%m-01' )
        AND CURDATE( ) - INTERVAL a.a + ( 10 * b.a ) + ( 100 * c.a ) DAY &lt;= LAST_DAY( NOW( ) )
        ) d

        LEFT JOIN xd_orders_info so ON DATE( so.create_time ) = d.date_in_month
        where  ( so.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id = #{deptId} OR find_in_set( #{deptId}, ancestors ) ) )
        GROUP BY
        d.date_in_month
        ORDER BY
        d.date_in_month;
    </select>

<select  id="getWeekSales" parameterType="map" resultType="map">
    SELECT
        DATE(create_time) AS sale_date,
        SUM(end_money) AS total_sales
    FROM
        xd_orders
    WHERE
        create_time BETWEEN #{start} AND #{end} -- 假设的时间区间
      AND ( xd_orders.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id = #{deptId} OR find_in_set( #{deptId}, ancestors ) ) )
    GROUP BY
        DATE(create_time)
    ORDER BY
        create_time;
</select>


</mapper>